map $http_accept $format {
  default json;
  text/csv csv;
  application/json json;
}

lua_package_path "/etc/nginx/lua/?.lua;;";

server {
  absolute_redirect off;
  listen 80;
  default_type application/json;

  root public;

  index openapi.json;

  more_set_headers "Server: registers/0.1";


  # Remove trailing slashes ##################################################

  rewrite ^/(.*)/$ /$1 permanent;


  # Errors ###################################################################

  location @not_found {
    access_by_lua_block {
      local utils = require("utils")
      local errors = require("errors")

      utils.ngx_error(errors.not_found())
    }
  }

  location @internal_server_error {
    access_by_lua_block {
      local utils = require("utils")
      local errors = require("errors")

      utils.ngx_error(errors.internal_server_error())
    }
  }

  error_page 404 @not_found;
  error_page 500 @internal_server_error;


  # Entries ##################################################################

  location = /entries.csv {
    if ($arg_start) {
      access_by_lua_block {
        require("utils").slice_csv()
      }
    }

    alias public/entries/index.csv;
  }

  location = /entries.json {
    if ($arg_start) {
      access_by_lua_block {
        require("utils").slice_json()
      }
    }

    alias public/entries/index.json;
  }

  location /entries {
    rewrite ^/entries$ /entries.$format last;
    rewrite ^/entries/(\d+)$ /entries/$1.$format last;
  }


  # Records ##################################################################

  location @recordscontentnegotiation {
    rewrite ^/records/([A-Za-z\d][A-Za-z\d-_.\/]*)$ /records/$1.$format break;
  }

  location /records {
    rewrite ^/records.csv /records/index.csv;
    rewrite ^/records.json /records/index.json;
    rewrite ^/records$ /records/index.$format break;

    try_files $uri @recordscontentnegotiation;
  }


  location / {

    # Legacy
    rewrite ^/record/(.*)$ /records/$1 permanent;
    rewrite ^/entry/(.*)$ /entries/$1 permanent;
    rewrite ^/item/(.*)$ /items/$1 permanent;

    # Register
    rewrite ^/register$ /register.json break;

    # Items
    rewrite ^/items.csv /items/index.csv;
    rewrite ^/items.json /items/index.json;
    rewrite ^/items$ /items/index.$format break;
    rewrite ^/items/(\w|:|-)$ /items/$1.$format break;

    # Archive
    rewrite ^/download-register /archive.zip;

    # RSF
    rewrite ^/download-rsf /commands/0.rsf;
    rewrite ^/commands /commands/0.rsf break;
    rewrite ^/download-rsf/(.*)$ /commands/$1.rsf;
  }
}
