map $http_accept $format {
  default json;
  text/csv csv;
  "text/csv; charset=UTF-8" csv;
  application/json json;
}

lua_package_path "/usr/local/openresty/nginx/lua/?.lua;;";

server {
  absolute_redirect off;
  listen {{ port }};
  default_type application/json;

  root public;

  index openapi.json;

  more_set_headers "Server: registers/0.1";


  # Remove trailing slashes ##################################################

  rewrite ^/(.*)/$ /$1 permanent;


  # Errors ###################################################################

  location @not_found {
    access_by_lua_block {
      local utils = require("utils")
      local errors = require("errors")

      utils.ngx_error(errors.not_found())
    }
  }

  location @internal_server_error {
    access_by_lua_block {
      local utils = require("utils")
      local errors = require("errors")

      utils.ngx_error(errors.internal_server_error())
    }
  }

  error_page 404 @not_found;
  error_page 500 @internal_server_error;


  # Entries ##################################################################

  location = /entries.csv {
    default_type "text/csv; charset=UTF-8";

    if ($arg_start) {
      access_by_lua_block {
        require("utils").slice_csv()
      }
    }

    alias public/entries/index.csv;
  }

  location = /entries.json {
    if ($arg_start) {
      access_by_lua_block {
        require("utils").slice_json()
      }
    }

    alias public/entries/index.json;
  }

  location ~ ^/entries/(\d+).csv$ {
    default_type "text/csv; charset=UTF-8";

    alias public/entries/$1.csv;
  }

  location /entries {
    rewrite ^/entries$ /entries.$format last;
    rewrite ^/entries/(\d+)$ /entries/$1.$format last;
  }


  # Records ##################################################################

  location @single_record {
    rewrite ^/records/(.+)$ /records/$1.$format last;
  }

  location = /records.csv {
    default_type "text/csv; charset=UTF-8";
    
    alias public/records/index.csv;
  }

  location = /records.json {
    alias public/records/index.json;
  }

  location ~ ^/records/(.+).csv$ {
    default_type "text/csv; charset=UTF-8";

    alias public/records/$1.csv;
  }

  location /records {
    rewrite ^/records$ /records.$format last;

    try_files $uri @single_record;
  }


  # Items ####################################################################

  location @single_item {
    rewrite ^/items/(.+)$ /items/$1.$format last;
  }

  location = /items.csv {
    default_type "text/csv; charset=UTF-8";

    alias public/items/index.csv;
  }

  location = /items.json {
    alias public/items/index.json;
  }

  location ~ ^/items/(.+).csv$ {
    default_type "text/csv; charset=UTF-8";

    alias public/items/$1.csv;
  }

  location /items {
    rewrite ^/items$ /items.$format last;

    try_files $uri @single_item;
  }


  # Register #################################################################

  location = /register {
    alias public/register.json;
  }


  # Archive ##################################################################

  location = /download-register {
    default_type application/octet-stream;

    alias public/archive.zip;
  }


  # RSF ######################################################################

  location /download-rsf {
    default_type application/uk-gov-rsf;

    rewrite ^/download-rsf$ /commands.rsf last;
  }

  location = /commands {
    default_type application/uk-gov-rsf;

    alias public/commands.rsf;
  }


  # Legacy ###################################################################

  location / {
    rewrite ^/record/(.*)$ /records/$1 permanent;
    rewrite ^/entry/(.*)$ /entries/$1 permanent;
    rewrite ^/item/(.*)$ /items/$1 permanent;
  }
}
